{"version":3,"sources":["assets/components/CardSection/CardSection.js","components/CheckoutForm/CheckoutForm.js","components/Abonnement/Abonnement.js","assets/components/QRCode/QrCode.js","assets/QRCodeTicket/QRCodeTicket.js","components/Profil/Profil.js","components/Connexion/Connexion.js","components/Inscription/Inscription.js","components/ConnexionAbo/ConnexionAbo.js","assets/components/DailyMenu/DailyMenu.js","components/Personnel/Personnel.js","components/HomePage/HomePage.js","assets/components/OtherMenu/OtherMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","assets/components/Navbar/Navbar.js","assets/components/Deconnexion/Deconnexion.js","assets/components/Footer/Footer.js","components/dataClient/dataClient.js","components/App/App.js","serviceWorker.js","index.js"],"names":["CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","Component","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","event","createSubscription","a","customerId","paymentMethodId","priceId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","response","json","result","error","subscription","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","type","card","paymentMethod","console","log","id","className","onSubmit","disabled","stripePromise","loadStripe","Abonnement","Container","Row","Col","QrCode","props","state","uri","this","restaurantName","value","encodeURI","size","QrCodeTicket","src","Profil","redirect","clear","setLogin","to","handleShow","setState","show","handleClose","renderButtonSub","profil","abonne","variant","onClick","history","push","buttonEdit","editing","putProfilOnClick","buttonCancel","getMonProfil","handleInput","target","name","Headers","responseObject","monProfil","unSubscription","modifProfil","data","bossName","adress","email","bossFirstName","phone","message","modifProfilLogo","e","FormData","logo","md","Value","onChange","xs","Button","window","confirm","Connexion","addLogin","password","responseData","token","setItem","userId","Form","Group","controlId","Control","ClassName","placeholder","Label","Inscription","addNewRegister","Check","label","marginLeft","href","block","span","offset","DailyMenu","delete","dailyMenu","menu","getDailyMenu","err","noMenu","picture","Card","Img","alt","Body","classNam","Personnel","getWaiterList","serveur","renderMesServeurs","tabServeur","map","element","serveurName","mail","serveurMail","addAffiliation","nom","addReferent","crew","slidesPerPage","slidesPerScroll","clickToChange","centered","infinite","breakpoints","1000","500","animationSpeed","HomePage","getRestaurantName","OtherMenu","getOtherMenu","otherMenu","length","Carousel","display","deleteMenu","index","contentDisplay","Item","width","multiple","accept","Menu","sm","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","Footer","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","DataClient","getDataClient","clientInfo","client","object","firstname","lastname","age","class","table","filename","sheet","buttonText","Table","striped","bordered","hover","App","Navbar","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8099400b.chunk.js","sourcesContent":["/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Paiement\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CheckoutForm.css\";\r\nimport CardSection from \"../../assets/components/CardSection/CardSection\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/createsubscription\", {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n          body: JSON.stringify({\r\n            customerId: customerId,\r\n            paymentMethodId: paymentMethodId,\r\n            priceId: \"price_1IGLo3Hoh2Vgz5QdnS6OVonj\",\r\n          }),\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <button className=\"submitButton\" disabled={!stripe}>\r\n        Devenir un restaurateur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./Abonnement.css\";\r\n\r\nimport CheckoutForm from \"../CheckoutForm/CheckoutForm\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium restaurateur Tipourboire</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, { Component, Button } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCode.css\";\r\n\r\nclass QrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let uri =\r\n      \"https://back-end.osc-fr1.scalingo.io/client/getMenu?restaurantName=\" +\r\n      this.props.restaurantName;\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QRCode className=\"qr\" value={encodeURI(uri)} size={150} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCode;\r\n","import React, { Component, Button } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCodeTicket.css\";\r\n\r\nclass QrCodeTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let uri =\r\n      \"https://back-end.osc-fr1.scalingo.io/client/getMenuTicket?restaurantName=\" +\r\n      this.props.restaurantName;\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QRCode className=\"qr\" src=\"coucou\" value={encodeURI(uri)} size={150} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCodeTicket;\r\n","import React, { Component, Input } from \"react\";\r\nimport { Col, Row, Container, Button, Modal } from \"react-bootstrap\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport \"./profil.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: {},\r\n      editing: true,\r\n      show: false,\r\n      redirect: false,\r\n    };\r\n  }\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.profil.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Souscrire à l'abonnement Premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  buttonEdit = () => {\r\n    if (this.state.editing == true) {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.setState({ editing: false });\r\n            }}\r\n          >\r\n            Modifier <br />\r\n          </button>\r\n          {this.renderButtonSub()}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"button\" onClick={this.putProfilOnClick}>\r\n          Confirmer Modification\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  buttonCancel = () => {\r\n    if (this.state.editing == false) {\r\n      return (\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            this.setState({ editing: true });\r\n            this.getMonProfil();\r\n          }}\r\n        >\r\n          Annuler\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  handleInput = (event) => {\r\n    let profil = this.state.profil;\r\n    profil[event.target.name] = event.target.value;\r\n    this.setState({\r\n      profil: profil,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n  /* Affichage Profil */\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  unSubscription = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ profil: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du profil */\r\n  modifProfil = () => {\r\n    const data = {\r\n      restaurantName: this.state.profil.restaurantName,\r\n      bossName: this.state.profil.bossName,\r\n      adress: this.state.profil.adress,\r\n      email: this.state.profil.email,\r\n      bossFirstName: this.state.profil.bossFirstName,\r\n      phone: this.state.profil.phone,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ editing: true });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du logo */\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit/logo\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  putProfilOnClick = () => {\r\n    this.modifProfil();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"styleProfil\">\r\n        <Col className=\"addImage\">\r\n          <h1 className=\"title\">Mon Logo </h1>\r\n          <form onSubmit={this.modifProfilLogo} className=\"formLogo\">\r\n            <img\r\n              className=\"restaurantLogo\"\r\n              src={\r\n                \"https://back-end.osc-fr1.scalingo.io/\" + this.state.profil.logo\r\n              }\r\n            ></img>\r\n            <br />\r\n            <br />\r\n            <input type=\"file\" name=\"file\" />\r\n            <br />\r\n            <button className=\"buttonVal\" type=\"submit\">\r\n              Valider\r\n            </button>\r\n          </form>\r\n        </Col>\r\n        <Row>\r\n          {\" \"}\r\n          <Col md={12} className=\"formProfil \">\r\n            <h1 className=\"title\">Mes informations </h1>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <h1 className=\"textProfilTitre\">\r\n                  {this.state.profil.restaurantName}\r\n                </h1>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.restaurantName}\r\n                  name=\"restaurantName\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.bossFirstName}\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossFirstName\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossFirstName}\r\n                />\r\n              )}\r\n            </p>\r\n\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.bossName}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossName\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossName}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.adress}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"adress\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.adress}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.email}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.email}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.phone}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.phone}\r\n                  name=\"phone\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            {this.buttonEdit()}\r\n\r\n            {this.buttonCancel()}\r\n          </Col>\r\n          <Col className=\"formProfil nomProfil center\">\r\n            <h1 className=\"title\">Mes QR Codes </h1>\r\n            <Row>\r\n              <Col xs={6}>\r\n                <p className=\"qr\">QR CODE Ticket </p>\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n              <Col xs={6}>\r\n                <p className=\"qr\"> QR CODE Table </p>\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Button\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                localStorage.clear();\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              className=\"signOut1 button\"\r\n            >\r\n              Déconnexion\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/homepage\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous!</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.handleInput}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.handleInput}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.addLogin}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./Inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurantName: \"\",\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/inscription\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"Bloc-principal\">\r\n        <Row>\r\n          <Col className=\"colInscr\" md={6}>\r\n            <Row className=\"Titre\">\r\n              <h1>Créer mon compte</h1>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Form className=\"form\" onSubmit={this.addNewRegister}>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formNom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom du restaurant\"\r\n                        name=\"restaurantName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formPrenom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom \"\r\n                        name=\"bossName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formDate\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Prénom\"\r\n                        name=\"bossFirstName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formAdresse\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Adresse\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formVille\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Téléphone\"\r\n                        name=\"phone\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formTel\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <Form.Group\r\n                      className=\"servicePropose\"\r\n                      controlId=\"formService\">\r\n                      <Form.Label controlId=\"formService\">\r\n                        Services proposés\r\n                      </Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"noon\"\r\n                        label=\"Midi\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"evening\"\r\n                        label=\"Soir\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <Form.Group controlId=\"formService\">\r\n                      <Form.Label>Sytèmes de pourboires</Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"alone\"\r\n                        label=\"Individuel\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"Collectif\"\r\n                        label=\"Général\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formPass\">\r\n                  <Form.Label>\r\n                    Mot de passe\r\n                    <p className=\"detailPassword\">\r\n                      8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\r\n                      chiffre et 1 caractère spécial\r\n                    </p>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col md={9}>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Row style={{ marginLeft: \"2px\" }}>\r\n                        <a\r\n                          className=\"cgvLink\"\r\n                          href=\"/CGV_TIPTOTHANK.pdf\"\r\n                          target=\"_blanck\">\r\n                          J'ai lu et j'accepte les CGU et CGV\r\n                        </a>\r\n                      </Row>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Button className=\"submitButton\" block type=\"submit\">\r\n                      S'inscrire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n              <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./ConnexionAbo.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\", redirect: false };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/abonnement\" />;\r\n    }\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/loginAbo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n        localStorage.setItem(\"token\", responseData.token);\r\n        localStorage.setItem(\"userID\", responseData.userId);\r\n        this.setState({ redirect: true });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"connexion-container\">\r\n          <h1 className=\"titreConnexion\">Connexion</h1>\r\n\r\n          <Form className=\"identifiants\">\r\n            <Form.Row className=\"align-items-center\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Username\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Mot de passe\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Mot de passe\"\r\n                    type=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mb-2\"\r\n                  className=\"sign-up\"\r\n                  onClick={this.addLogin}\r\n                >\r\n                  Se connecter\r\n                </Button>\r\n                <p className=\"mdp\">Mot de passe oublié</p>\r\n              </Col>\r\n            </Form.Row>\r\n            <div className=\"inscription\">\r\n              <Link className=\"mdp\" to=\"/inscription\">\r\n                Vous n'êtes pas encore inscrit ? C'est par ici\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n          {this.redirect()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport \"./DailyMenu.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      menu: { dailyMenu: { picture: \"\", label: \"\" } },\r\n    };\r\n  }\r\n\r\n  delete = (e) => {\r\n    window.confirm(\"Etes-vous sur de vouloir supprimer le menu du jour ?\");\r\n    e.preventDefault();\r\n    const data = {\r\n      dailyMenu: this.state.menu.dailyMenu,\r\n    };\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/add\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  noMenu = () => {\r\n    if (\r\n      this.state.menu.dailyMenu.picture == \"\" &&\r\n      this.state.menu.dailyMenu.label == \"\"\r\n    ) {\r\n      return <p>Vous n'avez pas de menu du jour</p>;\r\n    } else {\r\n      return (\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={\r\n            \"https://back-end.osc-fr1.scalingo.io/\" +\r\n            this.state.menu.dailyMenu.picture\r\n          }\r\n          className=\"dailyMenu\"\r\n          alt=\"Menu du Jour\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dailyMenuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Link className=\"linkButton\" to=\"/menus\">\r\n              <h1 className=\"menujour\">Menu du Jour</h1>\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"colMenu\" md={12}>\r\n            <form className=\"formMenu\" onSubmit={this.onSubmit}>\r\n              <input className=\"button\" type=\"file\" name=\"file\" />\r\n\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n\r\n            {this.noMenu()}\r\n            <Card.Body classNam=\"cardsupp\">\r\n              <p>{this.state.menu.dailyMenu.label}</p>\r\n              <button\r\n                className=\"boutonSupprimer\"\r\n                type=\"submit\"\r\n                onClick={this.delete}\r\n              >\r\n                Supprimer le menu\r\n              </button>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component, Form, Label, Input } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\nimport \"./Personnel.css\";\r\nimport Icon from \"react-fa\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Personnel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] }, email: \"\" };\r\n  }\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-list\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ serveur: data });\r\n          console.log(this.state.serveur);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  renderMesServeurs = () => {\r\n    return this.state.serveur.tabServeur.map((element) => {\r\n      return (\r\n        <div className=\"serveurDiv\">\r\n          <p className=\"serveurP\">{element.serveurName}</p>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              const data = {\r\n                mail: element.serveurMail,\r\n              };\r\n\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"DELETE\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-delete\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    this.getWaiterList();\r\n                  },\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addAffiliation = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      nom: this.state.nom,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/affiliation\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  addReferent = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/referent\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getWaiterList();\r\n  }\r\n\r\n  crew = () => {\r\n    if (!this.state.serveur) {\r\n      return (\r\n        <p className=\"affiliation\">Vous n'avez pas de personnel affilié</p>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col className=\"crewStyle\">\r\n          <Carousel\r\n            slidesPerPage={5}\r\n            slidesPerScroll={1}\r\n            clickToChange\r\n            centered\r\n            infinite={true}\r\n            breakpoints={{\r\n              1000: {\r\n                // these props will be applied when screen width is less than 1000px\r\n                slidesPerPage: 0,\r\n                clickToChange: false,\r\n                centered: false,\r\n              },\r\n              500: {\r\n                slidesPerPage: 1,\r\n                slidesPerScroll: 1,\r\n                clickToChange: false,\r\n                centered: false,\r\n\r\n                animationSpeed: 2000,\r\n                infinite: false,\r\n              },\r\n            }}\r\n          >\r\n            {this.renderMesServeurs()}\r\n          </Carousel>\r\n        </Col>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"container personnel\">\r\n        <Row>\r\n          <Col>\r\n            <Link className=\"linkButton\" to=\"/equipe\">\r\n              <h1 className=\"title-container\">Gestion de mon équipe</h1>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colAffiliation\">\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addAffiliation}\r\n              className=\"button\"\r\n            />\r\n            <p>\r\n              \"Le serveur doit avoir crée son compte avant de pouvoir s'affilier à un restaurant\"\r\n            </p>\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation d'un serveur referent (pourboire commun)\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addReferent}\r\n              className=\"button\"\r\n            />\r\n            <br />\r\n            {this.state.message}\r\n          </Col>\r\n        </Row>\r\n        <h1 className=\"titleWaiter\">Mon équipe </h1>\r\n        {this.crew()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Personnel;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./HomePage.css\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { restaurantName: \"\" };\r\n  }\r\n  getRestaurantName = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ restaurantName: responseObject.restaurantName });\r\n          this.setState({ abonne: responseObject.abonne });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Souscrire à l'abonnement premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRestaurantName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Personnel className=\"personnel\" />\r\n            <div className=\"titleQR\">{this.renderButtonSub()}</div>\r\n            <h1 className=\"titleQR\">Mes QR Codes</h1>\r\n\r\n            <Row>\r\n              <Col>\r\n                <p className=\"titleQR\">QR CODE Ticket </p>\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.restaurantName}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <p className=\"titleQR\"> QR CODE Table </p>\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <DailyMenu className=\"menuhome\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./OtherMenu.css\";\r\nclass OtherMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: { otherMenu: [] },\r\n    };\r\n  }\r\n  getOtherMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOtherMenu();\r\n  }\r\n\r\n  noMenu = () => {\r\n    if (this.state.menu.otherMenu && this.state.menu.otherMenu.length) {\r\n      return (\r\n        <div>\r\n          <Carousel>{this.display()}</Carousel>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Vous n'avez pas de menu pour l'instant</p>;\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/add\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteMenu = (e, index) => {\r\n    e.preventDefault();\r\n    const data = { picture: this.state.menu.otherMenu[index].picture };\r\n\r\n    const headers = new Headers({\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  display = () => {\r\n    let contentDisplay = [];\r\n    this.state.menu.otherMenu.map((element, index) => {\r\n      contentDisplay.push(\r\n        <Carousel.Item>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"https://back-end.osc-fr1.scalingo.io/\" + element.picture}\r\n            />\r\n            <Card.Body>\r\n              <Button\r\n                onClick={(e) => this.deleteMenu(e, index)}\r\n                className=\"bouton\"\r\n              >\r\n                Supprimer le menu\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return contentDisplay;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"menuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"menu\">\r\n            <h2>Mes Menus</h2>\r\n          </Col>\r\n          <Col className=\"menuOther\" md={12}>\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n              />\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n            {this.noMenu()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport OtherMenu from \"../../assets/components/OtherMenu/OtherMenu\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menus\">\r\n        <Row>\r\n          <Col>\r\n            <DailyMenu />\r\n          </Col>\r\n          <Col md={12} sm={12}>\r\n            <OtherMenu />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./navBar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavLink,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/homepage\">Accueil</Dropdown.Item>\r\n                <Dropdown.Item href=\"/Profil\">Profil</Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/homepage\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/Home\">Inscription</Dropdown.Item>\r\n                <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n    console.log(\"coucou\", this.props.login);\r\n  }\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n}\r\nexport default Barremenu;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Deconnexion.css\";\r\n\r\nclass Deconnexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"deconnect\">\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ redirect: true });\r\n          }}\r\n          className=\"signOut\"\r\n        >\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n        </button>\r\n        {this.redirect()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deconnexion;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"/CGV_TIPTOTHANK.pdf\"\r\n                target=\"_blanck\"\r\n                className=\"textFooter\"\r\n              >\r\n                Conditions Générales\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/*<Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"./dataClient.css\";\r\n\r\nclass DataClient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : [] ,\r\n    };\r\n  }\r\n  getDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n  \r\n    \r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.map((element, index) => {\r\n      return (\r\n       \r\n          \r\n        \r\n        \r\n          <tr>\r\n            <td type=\"text\" id=\"firstname\" name=\"firstname\">\r\n              {\" \"}\r\n              {element.firstname}\r\n            </td>\r\n            <td type=\"text\" id=\"lastname\" name=\"lastname\">\r\n              {\" \"}\r\n              {element.lastname}\r\n            </td>\r\n            <td type=\"text\" id=\"email\" name=\"email\">\r\n              {\" \"}\r\n              {element.email}\r\n            </td>\r\n            <td type=\"text\" id=\"phone\" name=\"phone\">\r\n              {\" \"}\r\n              {element.phone}\r\n            </td>\r\n            <td type=\"text\" id=\"age\" name=\"age\">\r\n              {\" \"}\r\n              {element.age}\r\n            </td>\r\n          </tr>\r\n        \r\n     \r\n     \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='bloc-data'>  \r\n        <h3>Base de données client</h3>\r\n        <div class=\"table-responsive\">\r\n        <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"Telecharger\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"tablexls\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Télécharger\"/>\r\n        <Table id=\"table-to-xls\" striped bordered hover>\r\n        <th className='colorTitre'>Nom</th>\r\n         <th className='colorTitre'>Prenom</th>\r\n        <th className='colorTitre'>Mail</th>\r\n        <th className='colorTitre'>Téléphone</th>\r\n        <th className='colorTitre'>Age</th>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n        </Table>\r\n        </div>\r\n       \r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default DataClient\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Abonnement from \"../Abonnement/Abonnement\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport ConnexionAbo from \"../ConnexionAbo/ConnexionAbo\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\n\r\nimport Navbar from \"../../assets/components/Navbar/Navbar\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport DataClient from \"../dataClient/dataClient\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Navbar setLogin={this.setLogin} login={this.state.login} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/homepage\" component={HomePage} />\r\n\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/profil\"\r\n              render={(props) => <Profil setLogin={this.setLogin} {...props} />}\r\n            />\r\n            <Route path=\"/dataClient\" component={DataClient} />\r\n            <Route path=\"/menus\" component={Menu} />\r\n            <Route path=\"/equipe\" component={Personnel} />\r\n            <Route path=\"/abonnement\" component={Abonnement} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}