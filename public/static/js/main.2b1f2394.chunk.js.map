{"version":3,"sources":["assets/components/CardSection/CardSection.js","components/CheckoutForm/CheckoutForm.js","components/Abonnement/Abonnement.js","assets/components/QRCode/QrCode.js","assets/QRCodeTicket/QRCodeTicket.js","firebase.js","components/Profil/Profil.js","components/Connexion/Connexion.js","components/Inscription/Inscription.js","components/ConnexionAbo/ConnexionAbo.js","assets/components/DailyMenu/DailyMenu.js","components/Personnel/Personnel.js","components/HomePage/HomePage.js","assets/components/OtherMenu/OtherMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/InscriptionParrainage/inscriptionParrainage.js","assets/components/Navbar/Navbar.js","assets/components/Deconnexion/Deconnexion.js","assets/components/Footer/Footer.js","components/dataClient/dataClient.js","components/App/App.js","serviceWorker.js","index.js"],"names":["CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","Component","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","event","createSubscription","a","customerId","paymentMethodId","priceId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","response","json","result","error","subscription","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","type","card","paymentMethod","console","log","id","className","onSubmit","Form","Check","name","label","required","disabled","stripePromise","loadStripe","Abonnement","Container","Row","Col","QrHook","useState","uri","parse","useEffect","QRCODE","document","getElementById","text","encodeURI","width","height","title","titleFont","titleColor","titleBackgroundColor","titleHeight","titleTop","subTitle","subTitleFont","subTitleColor","subTitleTop","onClick","image","querySelector","toDataURL","element","createElement","setAttribute","display","appendChild","click","removeChild","QrCode","props","state","QrHookTicket","QrCodeTicket","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","storage","UploadPicture","imageStorage","setImageStorage","setMessage","Headers","responseObject","getMonProfil","e","data","FormData","target","message","logo","src","onChange","files","ref","put","on","alert","Profil","handleShow","setState","show","handleClose","renderButtonSub","profil","abonne","variant","history","push","buttonEdit","editing","putProfilOnClick","buttonCancel","handleInput","value","monProfil","setItem","restaurantName","unSubscription","modifProfil","bossName","adress","city","email","bossFirstName","phone","modifProfilLogo","redirect","this","md","Value","placeholder","postParrainage","xs","Button","window","confirm","setLogin","Connexion","addLogin","password","responseData","token","userId","Group","controlId","Control","ClassName","to","Label","Inscription","addNewRegister","marginLeft","fontWeight","href","block","span","offset","UploadMenu","images","setImages","setLabel","dailyMenu","setDailyMenu","getDailyMenu","menu","picture","err","Card","Body","Img","alt","deleteMenu","DailyMenu","Personnel","getWaiterList","serveur","renderMesServeurs","tabServeur","map","serveurName","mail","serveurMail","addAffiliation","nom","addReferent","crew","slidesPerPage","slidesPerScroll","clickToChange","centered","infinite","breakpoints","1000","500","animationSpeed","HomePage","getRestaurantName","OtherMenu","getOtherMenu","noMenu","otherMenu","length","Carousel","index","contentDisplay","Item","multiple","accept","Menu","sm","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","InscriptionParrainage","firstname","lastname","noon","evening","pourboireGeneral","pourboireIndividuel","date","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","clear","Footer","deleteProfil","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","DataClient","getDataClient","clientInfo","client","object","age","class","table","filename","sheet","buttonText","Table","striped","bordered","hover","App","Navbar","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2b1f2394.chunk.js","sourcesContent":["/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Paiement\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CheckoutForm.css\";\r\nimport CardSection from \"../../assets/components/CardSection/CardSection\";\r\nimport Form from \"react-bootstrap/Form\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\r\n          \"https://back-end.osc-fr1.scalingo.io/restaurateur/createsubscription\",\r\n          {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n              customerId: customerId,\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: \"price_1IGLo3Hoh2Vgz5QdnS6OVonj\",\r\n            }),\r\n          }\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <Form.Check\r\n        className=\"checkboxRetRest\"\r\n        type=\"checkbox\"\r\n        name=\"retractation\"\r\n        label=\" Je renonce à mon droit de rétractation d'une durée de 14 jours, afin que le service commence immédiatement. \"\r\n        required\r\n      />\r\n      <button className=\"submitButtonSubRestau\" disabled={!stripe}>\r\n        Devenir un restaurateur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./Abonnement.css\";\r\n\r\nimport CheckoutForm from \"../CheckoutForm/CheckoutForm\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium restaurateur Tipourboire</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, {\r\n  Component,\r\n  Button,\r\n  Fragment,\r\n  useEffect,\r\n  createRef,\r\n  useState,\r\n} from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCode.css\";\r\nimport QRCODE from \"easyqrcodejs\";\r\nfunction QrHook() {\r\n  const [restaurant, setRestaurant] = useState();\r\n  let uri =\r\n    \"https://back-end.osc-fr1.scalingo.io/client/getMenu?restaurantName=\" +\r\n    JSON.parse(localStorage.getItem(\"propsRestaurant\"));\r\n  useEffect(() => {\r\n    console.log(\"dsqdsq\", JSON.parse(localStorage.getItem(\"propsRestaurant\")));\r\n    new QRCODE(document.getElementById(\"qrCodeDivResto\"), {\r\n      text: encodeURI(uri),\r\n      width: 220,\r\n      height: 220,\r\n      title: \"Tipourboire\", // content\r\n      titleFont: \"bold 20px Montserrat\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      subTitle: \"Votre menu avec Tipourboire.\", // content\r\n\r\n      subTitleFont: \"11px Montserrat\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#f5a624\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div id=\"qrCodeDivResto\" />\r\n      <button\r\n        className=\"buttonQrCode\"\r\n        onClick={() => {\r\n          const canvas = document.querySelector(\"#qrCodeDivResto canvas\");\r\n          const image = canvas.toDataURL();\r\n\r\n          const element = document.createElement(\"a\");\r\n          element.setAttribute(\"href\", image);\r\n          element.setAttribute(\"download\", \"qrcode.png\");\r\n\r\n          element.style.display = \"none\";\r\n          document.body.appendChild(element);\r\n\r\n          element.click();\r\n\r\n          document.body.removeChild(element);\r\n        }}\r\n      >\r\n        Télécharger le QR Code Table\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass QrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QrHook className=\"qr\" />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCode;\r\n","import React, { Component, Button, useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCodeTicket.css\";\r\nimport QRCODE from \"easyqrcodejs\";\r\nimport qrcode from \"qrcode.react\";\r\nimport QrCode from \"../components/QRCode/QrCode\";\r\n\r\nfunction QrHookTicket() {\r\n  let uri =\r\n    \"https://back-end.osc-fr1.scalingo.io/client/getMenuTicket?restaurantName=\" +\r\n    JSON.parse(localStorage.getItem(\"propsRestaurant\"));\r\n\r\n  useEffect(() => {\r\n    new QRCODE(document.getElementById(\"qrCodeDiv\"), {\r\n      text: encodeURI(uri),\r\n      width: 200,\r\n      height: 200,\r\n      title: \"Tipourboire\", // content\r\n      titleFont: \"bold 20px  Montserrat\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      subTitle: \"Scannez, Donnez avec Tipourboire\", // content\r\n      subTitleFont: \"12px Montserrat\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#f5a624\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div id=\"qrCodeDiv\" />\r\n      <button\r\n        className=\"buttonQrCode\"\r\n        onClick={() => {\r\n          const canvas = document.querySelector(\"#qrCodeDiv canvas\");\r\n          const image = canvas.toDataURL();\r\n\r\n          const element = document.createElement(\"a\");\r\n          element.setAttribute(\"href\", image);\r\n          element.setAttribute(\"download\", \"canvas.png\");\r\n\r\n          document.body.appendChild(element);\r\n\r\n          element.click();\r\n        }}\r\n      >\r\n        Télécharger le QR Code Ticket\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nclass QrCodeTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QrHookTicket className=\"qr\" />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCodeTicket;\r\n","import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAut6vqnimGfA8-stmTnB-q4tyrXv2aJow\",\n    authDomain: \"tipourboire-57c09.firebaseapp.com\",\n    projectId: \"tipourboire-57c09\",\n    storageBucket: \"tipourboire-57c09.appspot.com\",\n    messagingSenderId: \"592397685193\",\n    appId: \"1:592397685193:web:e6c6a5fca6aeccef5f1818\",\n    measurementId: \"G-5LS7DQYY60\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n  var storage = firebase.storage();\n  export default storage","import React, { Component, Input, useEffect,useState } from \"react\";\r\nimport { Col, Row, Container, Button, Modal } from \"react-bootstrap\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport \"./profil.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport storage from \"../../firebase\";\r\n\r\nfunction UploadPicture() {\r\n  const [imageStorage, setImageStorage] = useState(\"\");\r\n  const [images, setImages] = useState(\"\");\r\n  const [label, setLabel] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dailyMenu, setDailyMenu] = useState({});\r\n\r\n  const upload = (e) => {\r\n    if (imageStorage == null) return;\r\n    storage\r\n      .ref(`/PictureRestau/${imageStorage.name}`)\r\n      .put(imageStorage)\r\n      .on(\"state_changed\", alert(\"Votre logo a bien été enregistré\"), alert);\r\n  };\r\n\r\n  const getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          \r\n          \r\n\r\n          console.log();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit/logo\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          setMessage(responseObject.message );\r\n          const headers = new Headers({\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n          });\r\n      \r\n          const options = {\r\n            method: \"GET\",\r\n            headers: headers,\r\n          };\r\n      \r\n          fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n            .then((response) => {\r\n              return response.json();\r\n            })\r\n            .then(\r\n              (responseObject) => {\r\n                \r\n                setImageStorage(responseObject.logo);\r\n      \r\n                console.log();\r\n              },\r\n      \r\n              (error) => {\r\n                console.log(error);\r\n              }\r\n            );\r\n        \r\n          \r\n     \r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMonProfil();\r\n  }, []);\r\n\r\n  return(\r\n    <Col className=\"addImage\">\r\n    <h1 className=\"title\">Mon Logo </h1>\r\n    <form onSubmit={modifProfilLogo} className=\"formLogo\">\r\n      <img\r\n        className=\"restaurantLogo\"\r\n        src={\r\n          \"https://back-end.osc-fr1.scalingo.io/\" + imageStorage\r\n        }\r\n      ></img>\r\n      <br />\r\n      <br />\r\n      <input type=\"file\"  name=\"file\"\r\n              onChange={(e) => {\r\n                setImageStorage(e.target.files[0]);\r\n              }} />\r\n      <br />\r\n      <button className=\"buttonVal\" type=\"submit\" onClick={upload}>\r\n        Valider\r\n      </button>\r\n    </form>\r\n  </Col>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: {},\r\n      editing: true,\r\n      show: false,\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.profil.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Souscrire à l'abonnement Premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  buttonEdit = () => {\r\n    if (this.state.editing == true) {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.setState({ editing: false });\r\n            }}\r\n          >\r\n            Modifier <br />\r\n          </button>\r\n          {this.renderButtonSub()}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"button\" onClick={this.putProfilOnClick}>\r\n          Confirmer Modification\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  buttonCancel = () => {\r\n    if (this.state.editing == false) {\r\n      return (\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            this.setState({ editing: true });\r\n            this.getMonProfil();\r\n          }}\r\n        >\r\n          Annuler\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  handleInput = (event) => {\r\n    let profil = this.state.profil;\r\n    profil[event.target.name] = event.target.value;\r\n    this.setState({\r\n      profil: profil,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n  /* Affichage Profil */\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n\r\n          localStorage.setItem(\r\n            \"propsRestaurant\",\r\n            JSON.stringify(responseObject.restaurantName)\r\n          );\r\n          console.log();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  unSubscription = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ profil: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du profil */\r\n  modifProfil = () => {\r\n    const data = {\r\n      restaurantName: this.state.profil.restaurantName,\r\n      bossName: this.state.profil.bossName,\r\n      adress: this.state.profil.adress,\r\n      city: this.state.profil.city,\r\n      email: this.state.profil.email,\r\n      bossFirstName: this.state.profil.bossFirstName,\r\n      phone: this.state.profil.phone,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ editing: true });\r\n\r\n          console.log(\"ro\", responseObject);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du logo */\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit/logo\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  putProfilOnClick = () => {\r\n    this.modifProfil();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"styleProfil parrainage\">\r\n       <UploadPicture/>\r\n        <Row>\r\n          \r\n          <Col md={12} className=\"formProfil \">\r\n            <h1 className=\"title\">Mes informations </h1>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <h1 className=\"textProfilTitre\">\r\n                  {this.state.profil.restaurantName}\r\n                </h1>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.restaurantName}\r\n                  name=\"restaurantName\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.bossFirstName}\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossFirstName\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossFirstName}\r\n                />\r\n              )}\r\n            </p>\r\n\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.bossName}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossName\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossName}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.adress}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"adress\"\r\n                  placeholder=\"Adresse\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.adress}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.city}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  placeholder=\"Ville\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.city}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.email}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.email}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.phone}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.phone}\r\n                  placeholder=\"Téléphone\"\r\n                  name=\"phone\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            {this.buttonEdit()}\r\n\r\n            {this.buttonCancel()}\r\n          </Col>\r\n          <Row>\r\n            <Col className=\"colParrainage\">\r\n              <Col md={12}>\r\n                <label className=\"demandeParrainage\">\r\n                  Parrainer un Serveur et/ou Restaurateur\r\n                </label>\r\n              </Col>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email du parrainé\"\r\n                className=\"inputParrainage\"\r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Envoyer\"\r\n                onClick={this.postParrainage}\r\n                className=\"buttonParrainage\"\r\n              />\r\n              <p className=\"infoParrainage\">\r\n                \" Vous êtes satisfaits : parlez-en autour de vous ! A chaque\r\n                parrainage d'un restaurateur, vous et votre confrère gagnez 2\r\n                mois d'abonnements Premium \"\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Col className=\"formProfil nomProfil center\">\r\n            <h1 className=\"title\">Mes QR Codes </h1>\r\n            <Row>\r\n              <Col xs={6}>\r\n                <p className=\"qr\">QR CODE Ticket </p>\r\n                <p className=\"qrSub\">\r\n                  à insérer sur vos tickets d'addition depuis votre logiciel de\r\n                  caisse\r\n                </p>\r\n\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n              <Col xs={6}>\r\n                <p className=\"qr\"> QR CODE Table </p>\r\n                <p className=\"qrSub\">\r\n                  à imprimer et coller sur les tables de votre restaurant\r\n                </p>\r\n\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Button\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              className=\"signOut1 button\"\r\n            >\r\n              Déconnexion\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/homepage\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.handleInput}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.handleInput}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.addLogin}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./Inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurantName: \"\",\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/inscription\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"Bloc-principal\">\r\n        <Row>\r\n          <Col className=\"colInscr\" md={6}>\r\n            <Row className=\"Titre\">\r\n              <h1>Créer mon compte</h1>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Form className=\"form\" onSubmit={this.addNewRegister}>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formNom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom du restaurant\"\r\n                        name=\"restaurantName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formPrenom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom \"\r\n                        name=\"bossName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formDate\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Prénom\"\r\n                        name=\"bossFirstName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formAdresse\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Adresse\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formCity\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"city\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formVille\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Téléphone\"\r\n                        name=\"phone\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formTel\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <Form.Group\r\n                      className=\"servicePropose\"\r\n                      controlId=\"formService\"\r\n                    >\r\n                      <Form.Label controlId=\"formService\">\r\n                        Services proposés\r\n                      </Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"noon\"\r\n                        label=\"Midi\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"evening\"\r\n                        label=\"Soir\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <Form.Group controlId=\"formService\">\r\n                      <Form.Label>Sytèmes de pourboires</Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"alone\"\r\n                        label=\"Individuel\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"Collectif\"\r\n                        label=\"Général\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formPass\">\r\n                  <Form.Label>\r\n                    Mot de passe\r\n                    <p className=\"detailPassword\">\r\n                      8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\r\n                      chiffre et 1 caractère spécial\r\n                    </p>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col md={9}>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <br />\r\n                      <Form.Check\r\n                        className=\"checkboxCGU\"\r\n                        type=\"checkbox\"\r\n                        name=\"acceptControl\"\r\n                        label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                        onChange={this.handleInput}\r\n                        required\r\n                      />\r\n                      <Row style={{ marginLeft: \"10px\", fontWeight: \"bold\" }}>\r\n                        <a\r\n                          className=\"cgvLink\"\r\n                          href=\"/CGV_TIPTOTHANK.pdf\"\r\n                          target=\"_blanck\"\r\n                        >\r\n                          CGU\r\n                        </a>\r\n                      </Row>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Button\r\n                      className=\"submitButton\"\r\n                      block\r\n                      type=\"submit\"\r\n                      block\r\n                      type=\"submit\"\r\n                    >\r\n                      S'inscrire\r\n                    </Button>\r\n                  </Col>\r\n                  <p className=\"annonce\">\r\n                    *TIPOURBOIRE est responsable du traitement des données\r\n                    personnelles collectées sur ce site. Elles sont collectées\r\n                    aux fins de : l'exécution du contrat/vous informer de nos\r\n                    nouveautés et actualités/à des fins statistiques, les bases\r\n                    légales respectives des traitements pouvant être l'exécution\r\n                    du contrat, l'intérêt légitime, ou le consentement. Pour\r\n                    plus d'informations voir notre politique de confidentialité.\r\n                  </p>\r\n                </Row>\r\n              </Form>\r\n              <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./ConnexionAbo.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\", redirect: false };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/abonnement\" />;\r\n    }\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/loginAbo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n        localStorage.setItem(\"token\", responseData.token);\r\n        localStorage.setItem(\"userID\", responseData.userId);\r\n        this.setState({ redirect: true });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"connexion-container\">\r\n          <h1 className=\"titreConnexion\">Connexion</h1>\r\n\r\n          <Form className=\"identifiants\">\r\n            <Form.Row className=\"align-items-center\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Username\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Mot de passe\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Mot de passe\"\r\n                    type=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mb-2\"\r\n                  className=\"sign-up\"\r\n                  onClick={this.addLogin}\r\n                >\r\n                  Se connecter\r\n                </Button>\r\n                <p className=\"mdp\">Mot de passe oublié</p>\r\n              </Col>\r\n            </Form.Row>\r\n            <div className=\"inscription\">\r\n              <Link className=\"mdp\" to=\"/inscription\">\r\n                Vous n'êtes pas encore inscrit ? C'est par ici\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n          {this.redirect()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport storage from \"../../../firebase\";\r\n\r\nimport \"./DailyMenu.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UploadMenu() {\r\n  const [imageStorage, setImageStorage] = useState(\"\");\r\n  const [images, setImages] = useState(\"\");\r\n  const [label, setLabel] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dailyMenu, setDailyMenu] = useState({});\r\n\r\n  const upload = (e) => {\r\n    if (imageStorage == null) return;\r\n    storage\r\n      .ref(`/DailyMenu/${imageStorage.name}`)\r\n      .put(imageStorage)\r\n      .on(\"state_changed\", alert(\"Votre menu a bien été enregistré\"), alert);\r\n  };\r\n\r\n  const getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          setImages(data.menu.dailyMenu.picture);\r\n          setLabel(data.menu.dailyMenu.label);\r\n          setDailyMenu(data.menu);\r\n          console.log(\"image\", data.menu.dailyMenu.picture);\r\n          console.log(\"image\", images);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n  const deleteMenu = (e) => {\r\n    window.confirm(\"Etes-vous sur de vouloir supprimer le menu du jour ?\");\r\n    e.preventDefault();\r\n    const data = {\r\n      dailyMenu: dailyMenu,\r\n    };\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          setMessage(responseData.message);\r\n          getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDailyMenu();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"dailyMenuContain\">\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Link className=\"linkButton\" to=\"/menus\">\r\n            <h1 className=\"menujour\">Menu du Jour</h1>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"colMenu\" md={12}>\r\n          <form\r\n            className=\"formMenu\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n\r\n              const data = new FormData(e.target);\r\n\r\n              const headers = new Headers({\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"PUT\",\r\n                body: data,\r\n                headers: headers,\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/add\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (responseData) => {\r\n                    setMessage(responseData.message);\r\n\r\n                    const headers = new Headers({\r\n                      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n                    });\r\n\r\n                    const options = {\r\n                      method: \"GET\",\r\n                      headers: headers,\r\n                    };\r\n\r\n                    fetch(\r\n                      \"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\",\r\n                      options\r\n                    )\r\n                      .then((response) => {\r\n                        return response.json();\r\n                      })\r\n                      .then(\r\n                        (data) => {\r\n                          setImageStorage(data.menu.dailyMenu.picture);\r\n                          setLabel(data.menu.dailyMenu.label);\r\n                          setDailyMenu(data.menu);\r\n                        },\r\n                        (err) => {\r\n                          console.log(err);\r\n                        }\r\n                      );\r\n                    getDailyMenu();\r\n                  },\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            <input\r\n              className=\"button\"\r\n              type=\"file\"\r\n              name=\"file\"\r\n              onChange={(e) => {\r\n                setImageStorage(e.target.files[0]);\r\n              }}\r\n            />\r\n            <button className=\"bouton\" type=\"submit\" onClick={upload}>\r\n              Valider\r\n            </button>\r\n          </form>\r\n\r\n          <Card.Body className=\"cardsupp\">\r\n            <p>{label}</p>\r\n\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"https://back-end.osc-fr1.scalingo.io/\" + images}\r\n              className=\"dailyMenu\"\r\n              alt=\"Menu du Jour1231312\"\r\n            />\r\n\r\n            <button\r\n              className=\"boutonSupprimer\"\r\n              type=\"submit\"\r\n              onClick={() => deleteMenu()}\r\n            >\r\n              Supprimer le menu\r\n            </button>\r\n          </Card.Body>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     \r\n    };\r\n  }\r\n\r\n\r\n  \r\n  componentDidMount() {\r\n \r\n  }\r\n\r\n  render() {\r\n    return <UploadMenu />;\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component, Form, Label, Input } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\nimport \"./Personnel.css\";\r\nimport Icon from \"react-fa\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Personnel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] }, email: \"\" };\r\n  }\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-list\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ serveur: data });\r\n          console.log(this.state.serveur);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  renderMesServeurs = () => {\r\n    return this.state.serveur.tabServeur.map((element) => {\r\n      return (\r\n        <div className=\"serveurDiv\">\r\n          <p className=\"serveurP\">{element.serveurName}</p>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              const data = {\r\n                mail: element.serveurMail,\r\n              };\r\n\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"DELETE\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-delete\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    this.getWaiterList();\r\n                  },\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addAffiliation = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      nom: this.state.nom,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/affiliation\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  addReferent = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/referent\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getWaiterList();\r\n  }\r\n\r\n  crew = () => {\r\n    if (!this.state.serveur) {\r\n      return (\r\n        <p className=\"affiliation\">Vous n'avez pas de personnel affilié</p>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col className=\"crewStyle\">\r\n          <Carousel\r\n            slidesPerPage={5}\r\n            slidesPerScroll={1}\r\n            clickToChange\r\n            centered\r\n            infinite={true}\r\n            breakpoints={{\r\n              1000: {\r\n                // these props will be applied when screen width is less than 1000px\r\n                slidesPerPage: 0,\r\n                clickToChange: false,\r\n                centered: false,\r\n              },\r\n              500: {\r\n                slidesPerPage: 1,\r\n                slidesPerScroll: 1,\r\n                clickToChange: false,\r\n                centered: false,\r\n\r\n                animationSpeed: 2000,\r\n                infinite: false,\r\n              },\r\n            }}\r\n          >\r\n            {this.renderMesServeurs()}\r\n          </Carousel>\r\n        </Col>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"container personnel\">\r\n        <Row>\r\n          <Col>\r\n            <Link className=\"linkButton\" to=\"/equipe\">\r\n              <h1 className=\"title-container\">Gestion de mon équipe</h1>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colAffiliation\">\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addAffiliation}\r\n              className=\"button\"\r\n            />\r\n            <p className=\"infoAffi\">\r\n              \"Si votre serveur n'est pas encore sur Tipourboire. Demandez-lui\r\n              de créer son compte Tipourboire avant de lui envoyer votre mail\r\n              d'affiliation\"\r\n            </p>\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation d'un serveur referent (pourboire commun)\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addReferent}\r\n              className=\"button\"\r\n            />\r\n            <p className=\"infoAffi\">\r\n              \"Si votre serveur référent n'est pas encore sur Tipourboire.\r\n              Demandez-lui de créer son compte Tipourboire avant de lui envoyer\r\n              votre mail d'affiliation\"\r\n            </p>\r\n            <br />\r\n            {this.state.message}\r\n          </Col>\r\n        </Row>\r\n        <h1 className=\"titleWaiter\">Mon équipe </h1>\r\n        {this.crew()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Personnel;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./HomePage.css\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { restaurantName: \"\" };\r\n  }\r\n  getRestaurantName = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          localStorage.setItem(\r\n            \"propsRestaurant\",\r\n            JSON.stringify(responseObject.restaurantName)\r\n          );\r\n          this.setState({ restaurantName: responseObject.restaurantName });\r\n          this.setState({ abonne: responseObject.abonne });\r\n          console.log(\r\n            \"consolelog\",\r\n            JSON.parse(localStorage.getItem(\"propsRestaurant\"))\r\n          );\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Souscrire à l'abonnement premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRestaurantName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Personnel className=\"personnel\" />\r\n            <div className=\"titleQR\">{this.renderButtonSub()}</div>\r\n            <h1 className=\"titleQR\">Mes QR Codes</h1>\r\n\r\n            <Row>\r\n              <Col>\r\n                <p className=\"titleQR\">QR CODE Ticket </p>\r\n                <p className=\"qrSub\">\r\n                  à insérer sur vos tickets d'addition depuis votre logiciel de\r\n                  caisse\r\n                </p>\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.restaurantName}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <p className=\"titleQR\"> QR CODE Menu </p>\r\n                <p className=\"qrSub\">\r\n                  à imprimer et coller sur les tables de votre restaurant\r\n                </p>\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <DailyMenu className=\"menuhome\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"./OtherMenu.css\";\r\nimport storage from \"../../../firebase\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass OtherMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: { otherMenu: [] },\r\n    };\r\n  }\r\n  getOtherMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOtherMenu();\r\n  }\r\n\r\n  noMenu = () => {\r\n    if (this.state.menu.otherMenu && this.state.menu.otherMenu.length) {\r\n      return (\r\n        <div>\r\n          <Carousel>{this.display()}</Carousel>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Vous n'avez pas de menu pour l'instant</p>;\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/add\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteMenu = (e, index) => {\r\n    e.preventDefault();\r\n    const data = { picture: this.state.menu.otherMenu[index].picture };\r\n\r\n    const headers = new Headers({\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  display = () => {\r\n    let contentDisplay = [];\r\n    this.state.menu.otherMenu.map((element, index) => {\r\n      contentDisplay.push(\r\n        <Carousel.Item>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"https://back-end.osc-fr1.scalingo.io/\" + element.picture}\r\n            />\r\n            <Card.Body>\r\n              <Button\r\n                onClick={(e) => this.deleteMenu(e, index)}\r\n                className=\"bouton\"\r\n              >\r\n                Supprimer le menu\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return contentDisplay;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"menuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"menu\">\r\n            <h2>Mes Menus</h2>\r\n          </Col>\r\n          <Col className=\"menuOther\" md={12}>\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n              />\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n            {this.noMenu()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport OtherMenu from \"../../assets/components/OtherMenu/OtherMenu\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menus\">\r\n        <Row>\r\n          <Col>\r\n            <DailyMenu />\r\n          </Col>\r\n          <Col md={12} sm={12}>\r\n            <OtherMenu />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component, useReducer } from \"react\";\nimport \"./inscriptionParrainage.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport firebase from 'firebase';\n\nclass InscriptionParrainage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurantName: \"\",\n    };\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  addNewRegister = (e) => {\n    e.preventDefault();\n    const data = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      city: this.state.city,\n      adress: this.state.adress,\n      restaurantName: this.state.restaurantName,\n      bossFirstName: this.state.bossFirstName,\n\n      bossName: this.state.bossName,\n      noon: this.state.noon,\n      evening: this.state.evening,\n      pourboireGeneral: this.state.pourboireGeneral,\n      pourboireIndividuel: this.state.pourboireIndividuel,\n\n      date: this.state.date,\n      email: this.state.email,\n      phone: this.state.phone,\n      password: this.state.password,\n    };\n    const headers = new Headers({\n      \"X-Requested-With\": \"XMLHttpRequest\",\n      \"Content-Type\": \"application/json\",\n    });\n\n    const options = {\n      method: \"POST\",\n      body: data,\n      headers: headers,\n    };\n\n    fetch(\"http://localhost:8080/restaurateur/parrainInscription\", options)\n      .then((response) => {\n        return response.json();\n      })\n\n      .then(\n        (responseObject) => {\n          this.setState({ message: responseObject.message });\n        },\n\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <Container className=\"Bloc-principal\">\n        <Row>\n          <Col className=\"colInscr\" md={6}>\n            <Row className=\"Titre\">\n              <h1>Créer mon compte</h1>\n            </Row>\n            <Row>\n              <p>\n                Félicitation ! Vous avez été parrainé(e), veuillez remplir les\n                champs ci-dessous pour finaliser votre inscription.\n              </p>\n            </Row>\n            <Row>\n              <Form className=\"form\">\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"formNom\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nom du restaurant\"\n                        name=\"restaurantName\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"formPrenom\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nom \"\n                        name=\"bossName\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"formDate\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Prénom\"\n                        name=\"bossFirstName\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Form.Group controlId=\"formAdresse\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Adresse\"\n                    name=\"adress\"\n                    onChange={this.handleInput}\n                  />\n                </Form.Group>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"formVille\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Téléphone\"\n                        name=\"phone\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"formTel\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"E-mail\"\n                        name=\"email\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group\n                      className=\"servicePropose\"\n                      controlId=\"formService\"\n                    >\n                      <Form.Label controlId=\"formService\">\n                        Services proposés\n                      </Form.Label>\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"noon\"\n                        label=\"Midi\"\n                        onChange={this.handleInput}\n                      />\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"evening\"\n                        label=\"Soir\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group controlId=\"formService\">\n                      <Form.Label>Sytèmes de pourboires</Form.Label>\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"alone\"\n                        label=\"Individuel\"\n                        onChange={this.handleInput}\n                      />\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"Collectif\"\n                        label=\"Général\"\n                        onChange={this.handleInput}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Form.Group controlId=\"formPass\">\n                  <Form.Label>\n                    Mot de passe\n                    <p className=\"detailPassword\">\n                      8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\n                      chiffre et 1 caractère spécial\n                    </p>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Mot de passe\"\n                    name=\"password\"\n                    onChange={this.handleInput}\n                  />\n                </Form.Group>\n                <Row>\n                  <Col md={9}>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                      <Row style={{ marginLeft: \"2px\" }}>\n                        <a\n                          className=\"cgvLink\"\n                          href=\"/CGV_TIPTOTHANK.pdf\"\n                          target=\"_blanck\"\n                        >\n                          J'ai lu et j'accepte les CGU et CGV\n                        </a>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                  <Col md={3}>\n                    <Button\n                      className=\"submitButton\"\n                      variant=\"primary\"\n                      block\n                      type=\"submit\"\n                      onClick={this.addNewRegister}\n                    >\n                      S'inscrire\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n              <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default InscriptionParrainage;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./navBar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavLink,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/homepage\">Accueil</Dropdown.Item>\r\n                <Dropdown.Item href=\"/Profil\">Profil</Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/homepage\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/inscription\">Inscription</Dropdown.Item>\r\n                <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n  }\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n}\r\nexport default Barremenu;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Deconnexion.css\";\r\n\r\nclass Deconnexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"deconnect\">\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ redirect: true });\r\n          }}\r\n          className=\"signOut\"\r\n        >\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n        </button>\r\n        {this.redirect()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deconnexion;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/deleteRestaurant\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"mentionsLegales/MentionsLégales.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link href=\"CGV/CGV.pdf\" className=\"textFooter\">\r\n                CGU\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"confidentialité/Politique_de_confidentialité.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/*<Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"./dataClient.css\";\r\n\r\nclass DataClient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : [] ,\r\n    };\r\n  }\r\n  getDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n  \r\n    \r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.map((element, index) => {\r\n      return (\r\n       \r\n          \r\n        \r\n        \r\n          <tr>\r\n            <td type=\"text\" id=\"firstname\" name=\"firstname\">\r\n              {\" \"}\r\n              {element.firstname}\r\n            </td>\r\n            <td type=\"text\" id=\"lastname\" name=\"lastname\">\r\n              {\" \"}\r\n              {element.lastname}\r\n            </td>\r\n            <td type=\"text\" id=\"email\" name=\"email\">\r\n              {\" \"}\r\n              {element.email}\r\n            </td>\r\n            <td type=\"text\" id=\"phone\" name=\"phone\">\r\n              {\" \"}\r\n              {element.phone}\r\n            </td>\r\n            <td type=\"text\" id=\"age\" name=\"age\">\r\n              {\" \"}\r\n              {element.age}\r\n            </td>\r\n          </tr>\r\n        \r\n     \r\n     \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='bloc-data'>  \r\n        <h3>Base de données client</h3>\r\n        <div class=\"table-responsive\">\r\n        <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"Telecharger\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"tablexls\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Télécharger\"/>\r\n        <Table id=\"table-to-xls\" striped bordered hover>\r\n        <th className='colorTitre'>Nom</th>\r\n         <th className='colorTitre'>Prenom</th>\r\n        <th className='colorTitre'>Mail</th>\r\n        <th className='colorTitre'>Téléphone</th>\r\n        <th className='colorTitre'>Age</th>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n        </Table>\r\n        </div>\r\n       \r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default DataClient\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Abonnement from \"../Abonnement/Abonnement\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport ConnexionAbo from \"../ConnexionAbo/ConnexionAbo\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport InscriptionParrainage from \"../InscriptionParrainage/inscriptionParrainage\";\r\nimport Navbar from \"../../assets/components/Navbar/Navbar\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport DataClient from \"../dataClient/dataClient\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Navbar setLogin={this.setLogin} login={this.state.login} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/homepage\"\r\n              render={(props) => (\r\n                <HomePage setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/profil\"\r\n              render={(props) => <Profil setLogin={this.setLogin} {...props} />}\r\n            />\r\n            <Route path=\"/dataClient\" component={DataClient} />\r\n            <Route path=\"/menus\" component={Menu} />\r\n            <Route path=\"/equipe\" component={Personnel} />\r\n            <Route path=\"/abonnement\" component={Abonnement} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n            <Route\r\n              path=\"/inscriptionParrainageRestaurateur\"\r\n              component={InscriptionParrainage}\r\n            />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}