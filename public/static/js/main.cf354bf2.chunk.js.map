{"version":3,"sources":["assets/components/CardSection/CardSection.js","components/CheckoutForm/CheckoutForm.js","components/Abonnement/Abonnement.js","assets/components/QRCode/QrCode.js","assets/QRCodeTicket/QRCodeTicket.js","components/Profil/Profil.js","components/Connexion/Connexion.js","components/Inscription/Inscription.js","components/ConnexionAbo/ConnexionAbo.js","assets/components/DailyMenu/DailyMenu.js","components/Personnel/Personnel.js","components/HomePage/HomePage.js","assets/components/OtherMenu/OtherMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","assets/components/Navbar/Navbar.js","assets/components/Deconnexion/Deconnexion.js","assets/components/Footer/Footer.js","components/dataClient/dataClient.js","components/App/App.js","serviceWorker.js","index.js"],"names":["CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","Component","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","event","createSubscription","a","customerId","paymentMethodId","priceId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","response","json","result","error","subscription","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","type","card","paymentMethod","console","log","id","className","onSubmit","disabled","stripePromise","loadStripe","Abonnement","Container","Row","Col","QrHook","useState","uri","parse","useEffect","QRCODE","document","getElementById","text","encodeURI","width","height","title","titleFont","titleColor","titleBackgroundColor","titleHeight","titleTop","subTitle","subTitleFont","subTitleColor","subTitleTop","QrCode","props","state","QrHookTicket","QrCodeTicket","Profil","handleShow","setState","show","handleClose","renderButtonSub","profil","abonne","variant","onClick","history","push","buttonEdit","editing","putProfilOnClick","buttonCancel","getMonProfil","handleInput","target","name","value","Headers","responseObject","monProfil","setItem","restaurantName","unSubscription","modifProfil","data","bossName","adress","email","bossFirstName","phone","message","modifProfilLogo","e","FormData","redirect","this","src","logo","md","Value","onChange","xs","Button","window","confirm","setLogin","Connexion","addLogin","password","responseData","token","userId","Form","Group","controlId","Control","ClassName","placeholder","to","Label","Inscription","addNewRegister","Check","label","marginLeft","href","block","span","offset","DailyMenu","delete","dailyMenu","menu","getDailyMenu","err","noMenu","picture","Card","Img","alt","Body","classNam","Personnel","getWaiterList","serveur","renderMesServeurs","tabServeur","map","element","serveurName","mail","serveurMail","addAffiliation","nom","addReferent","crew","slidesPerPage","slidesPerScroll","clickToChange","centered","infinite","breakpoints","1000","500","animationSpeed","HomePage","getRestaurantName","OtherMenu","getOtherMenu","otherMenu","length","Carousel","display","deleteMenu","index","contentDisplay","Item","multiple","accept","Menu","sm","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","clear","Footer","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","DataClient","getDataClient","clientInfo","client","object","firstname","lastname","age","class","table","filename","sheet","buttonText","Table","striped","bordered","hover","App","Navbar","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cf354bf2.chunk.js","sourcesContent":["/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Paiement\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CheckoutForm.css\";\r\nimport CardSection from \"../../assets/components/CardSection/CardSection\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/createsubscription\", {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n          body: JSON.stringify({\r\n            customerId: customerId,\r\n            paymentMethodId: paymentMethodId,\r\n            priceId: \"price_1IGLo3Hoh2Vgz5QdnS6OVonj\",\r\n          }),\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <button className=\"submitButton\" disabled={!stripe}>\r\n        Devenir un restaurateur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./Abonnement.css\";\r\n\r\nimport CheckoutForm from \"../CheckoutForm/CheckoutForm\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium restaurateur Tipourboire</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, {\r\n  Component,\r\n  Button,\r\n  Fragment,\r\n  useEffect,\r\n  createRef,\r\n  useState,\r\n} from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCode.css\";\r\nimport QRCODE from \"easyqrcodejs\";\r\nfunction QrHook() {\r\n  const [restaurant, setRestaurant] = useState();\r\n  let uri =\r\n    \"https://back-end.osc-fr1.scalingo.io/client/getMenu?restaurantName=\" +\r\n    JSON.parse(localStorage.getItem(\"propsRestaurant\"));\r\n  useEffect(() => {\r\n    console.log(\"dsqdsq\", JSON.parse(localStorage.getItem(\"propsRestaurant\")));\r\n    new QRCODE(document.getElementById(\"qrCodeRef\"), {\r\n      text: encodeURI(uri),\r\n      width: 200,\r\n      height: 200,\r\n      title: \"TIPOURBOIRE\", // content\r\n      titleFont: \"bold 18px Arial\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      subTitle: \"Votre menu avec Tipourboire.\", // content\r\n\r\n      subTitleFont: \"13px Arial\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#f5a624\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n  }, []);\r\n  return <div id=\"qrCodeRef\" />;\r\n}\r\n\r\nclass QrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QrHook className=\"qr\" />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCode;\r\n","import React, { Component, Button, useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCodeTicket.css\";\r\nimport QRCODE from \"easyqrcodejs\";\r\n\r\nfunction QrHookTicket() {\r\n  const [restaurant, setRestaurant] = useState();\r\n  let uri =\r\n    \"https://back-end.osc-fr1.scalingo.io/client/getMenuTicket?restaurantName=\" +\r\n    JSON.parse(localStorage.getItem(\"propsRestaurant\"));\r\n  useEffect(() => {\r\n    console.log(\"dsqdsq\", JSON.parse(localStorage.getItem(\"propsRestaurant\")));\r\n    new QRCODE(document.getElementById(\"qrCodeTicketRef\"), {\r\n      text: encodeURI(uri),\r\n      width: 200,\r\n      height: 200,\r\n      title: \"TIPOURBOIRE\", // content\r\n      titleFont: \"bold 18px Arial\", //font. default is \"bold 16px Arial\"\r\n      titleColor: \"#f5a624\", // color. default is \"#000\"\r\n      titleBackgroundColor: \"#fff\", // background color. default is \"#fff\"\r\n      titleHeight: 70, // height, including subTitle. default is 0\r\n      titleTop: 25, // draws y coordinates. default is 30\r\n      subTitle: \"Scannez, Donnez avec Tipourboire.\", // content\r\n\r\n      subTitleFont: \"12px Arial\", // font. default is \"14px Arial\"\r\n      subTitleColor: \"#f5a624\", // color. default is \"4F4F4F\"\r\n      subTitleTop: 50, // draws y coordinates. default is 0\r\n    });\r\n  }, []);\r\n  return <div id=\"qrCodeTicketRef\" />;\r\n}\r\nclass QrCodeTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QrHookTicket className=\"qr\" />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCodeTicket;\r\n","import React, { Component, Input } from \"react\";\r\nimport { Col, Row, Container, Button, Modal } from \"react-bootstrap\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport \"./profil.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: {},\r\n      editing: true,\r\n      show: false,\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.profil.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Souscrire à l'abonnement Premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  buttonEdit = () => {\r\n    if (this.state.editing == true) {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.setState({ editing: false });\r\n            }}\r\n          >\r\n            Modifier <br />\r\n          </button>\r\n          {this.renderButtonSub()}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"button\" onClick={this.putProfilOnClick}>\r\n          Confirmer Modification\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  buttonCancel = () => {\r\n    if (this.state.editing == false) {\r\n      return (\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            this.setState({ editing: true });\r\n            this.getMonProfil();\r\n          }}\r\n        >\r\n          Annuler\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  handleInput = (event) => {\r\n    let profil = this.state.profil;\r\n    profil[event.target.name] = event.target.value;\r\n    this.setState({\r\n      profil: profil,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n  /* Affichage Profil */\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n\r\n          localStorage.setItem(\r\n            \"propsRestaurant\",\r\n            JSON.stringify(responseObject.restaurantName)\r\n          );\r\n          console.log();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  unSubscription = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ profil: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du profil */\r\n  modifProfil = () => {\r\n    const data = {\r\n      restaurantName: this.state.profil.restaurantName,\r\n      bossName: this.state.profil.bossName,\r\n      adress: this.state.profil.adress,\r\n      email: this.state.profil.email,\r\n      bossFirstName: this.state.profil.bossFirstName,\r\n      phone: this.state.profil.phone,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ editing: true });\r\n\r\n          console.log(\"ro\", responseObject);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du logo */\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/profil/edit/logo\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  putProfilOnClick = () => {\r\n    this.modifProfil();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"styleProfil\">\r\n        <Col className=\"addImage\">\r\n          <h1 className=\"title\">Mon Logo </h1>\r\n          <form onSubmit={this.modifProfilLogo} className=\"formLogo\">\r\n            <img\r\n              className=\"restaurantLogo\"\r\n              src={\r\n                \"https://back-end.osc-fr1.scalingo.io/\" + this.state.profil.logo\r\n              }\r\n            ></img>\r\n            <br />\r\n            <br />\r\n            <input type=\"file\" name=\"file\" />\r\n            <br />\r\n            <button className=\"buttonVal\" type=\"submit\">\r\n              Valider\r\n            </button>\r\n          </form>\r\n        </Col>\r\n        <Row>\r\n          {\" \"}\r\n          <Col md={12} className=\"formProfil \">\r\n            <h1 className=\"title\">Mes informations </h1>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <h1 className=\"textProfilTitre\">\r\n                  {this.state.profil.restaurantName}\r\n                </h1>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.restaurantName}\r\n                  name=\"restaurantName\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.bossFirstName}\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossFirstName\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossFirstName}\r\n                />\r\n              )}\r\n            </p>\r\n\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.bossName}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossName\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossName}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.adress}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"adress\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.adress}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.email}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.email}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.phone}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.phone}\r\n                  name=\"phone\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            {this.buttonEdit()}\r\n\r\n            {this.buttonCancel()}\r\n          </Col>\r\n          <Col className=\"formProfil nomProfil center\">\r\n            <h1 className=\"title\">Mes QR Codes </h1>\r\n            <Row>\r\n              <Col xs={6}>\r\n                <p className=\"qr\">QR CODE Ticket </p>\r\n                <p className=\"qrSub\">\r\n                  à insérer sur vos tickets d'addition depuis votre logiciel de\r\n                  caisse\r\n                </p>\r\n\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n              <Col xs={6}>\r\n                <p className=\"qr\"> QR CODE Table </p>\r\n                <p className=\"qrSub\">\r\n                  à imprimer et coller sur les tables de votre restaurant\r\n                </p>\r\n\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.profil.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Button\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              className=\"signOut1 button\"\r\n            >\r\n              Déconnexion\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/homepage\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.handleInput}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.handleInput}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.addLogin}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./Inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurantName: \"\",\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/inscription\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"Bloc-principal\">\r\n        <Row>\r\n          <Col className=\"colInscr\" md={6}>\r\n            <Row className=\"Titre\">\r\n              <h1>Créer mon compte</h1>\r\n            </Row>\r\n            <Row>\r\n              <p>\r\n                Merci de remplir les informations ci-dessous pour finaliser la\r\n                création de votre compte.\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <Form className=\"form\" onSubmit={this.addNewRegister}>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formNom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom du restaurant\"\r\n                        name=\"restaurantName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formPrenom\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nom \"\r\n                        name=\"bossName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formDate\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Prénom\"\r\n                        name=\"bossFirstName\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formAdresse\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Adresse\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formVille\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Téléphone\"\r\n                        name=\"phone\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group controlId=\"formTel\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col xs={6}>\r\n                    <Form.Group\r\n                      className=\"servicePropose\"\r\n                      controlId=\"formService\">\r\n                      <Form.Label controlId=\"formService\">\r\n                        Services proposés\r\n                      </Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"noon\"\r\n                        label=\"Midi\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"evening\"\r\n                        label=\"Soir\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={6}>\r\n                    <Form.Group controlId=\"formService\">\r\n                      <Form.Label>Sytèmes de pourboires</Form.Label>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"alone\"\r\n                        label=\"Individuel\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        name=\"Collectif\"\r\n                        label=\"Général\"\r\n                        onChange={this.handleInput}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Group controlId=\"formPass\">\r\n                  <Form.Label>\r\n                    Mot de passe\r\n                    <p className=\"detailPassword\">\r\n                      8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\r\n                      chiffre et 1 caractère spécial\r\n                    </p>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Form.Group>\r\n                <Row>\r\n                  <Col md={9}>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Row style={{ marginLeft: \"2px\" }}>\r\n                        <a\r\n                          className=\"cgvLink\"\r\n                          href=\"/CGV_TIPTOTHANK.pdf\"\r\n                          target=\"_blanck\">\r\n                          J'ai lu et j'accepte les CGU et CGV\r\n                        </a>\r\n                      </Row>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Button className=\"submitButton\" block type=\"submit\">\r\n                      S'inscrire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n              <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./ConnexionAbo.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\", redirect: false };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/abonnement\" />;\r\n    }\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/loginAbo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n        localStorage.setItem(\"token\", responseData.token);\r\n        localStorage.setItem(\"userID\", responseData.userId);\r\n        this.setState({ redirect: true });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"connexion-container\">\r\n          <h1 className=\"titreConnexion\">Connexion</h1>\r\n\r\n          <Form className=\"identifiants\">\r\n            <Form.Row className=\"align-items-center\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Username\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Mot de passe\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Mot de passe\"\r\n                    type=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mb-2\"\r\n                  className=\"sign-up\"\r\n                  onClick={this.addLogin}\r\n                >\r\n                  Se connecter\r\n                </Button>\r\n                <p className=\"mdp\">Mot de passe oublié</p>\r\n              </Col>\r\n            </Form.Row>\r\n            <div className=\"inscription\">\r\n              <Link className=\"mdp\" to=\"/inscription\">\r\n                Vous n'êtes pas encore inscrit ? C'est par ici\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n          {this.redirect()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport \"./DailyMenu.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      menu: { dailyMenu: { picture: \"\", label: \"\" } },\r\n    };\r\n  }\r\n\r\n  delete = (e) => {\r\n    window.confirm(\"Etes-vous sur de vouloir supprimer le menu du jour ?\");\r\n    e.preventDefault();\r\n    const data = {\r\n      dailyMenu: this.state.menu.dailyMenu,\r\n    };\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/dailymenu/add\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  noMenu = () => {\r\n    if (\r\n      this.state.menu.dailyMenu.picture == \"\" &&\r\n      this.state.menu.dailyMenu.label == \"\"\r\n    ) {\r\n      return <p>Vous n'avez pas de menu du jour</p>;\r\n    } else {\r\n      return (\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={\r\n            \"https://back-end.osc-fr1.scalingo.io/\" +\r\n            this.state.menu.dailyMenu.picture\r\n          }\r\n          className=\"dailyMenu\"\r\n          alt=\"Menu du Jour\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dailyMenuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Link className=\"linkButton\" to=\"/menus\">\r\n              <h1 className=\"menujour\">Menu du Jour</h1>\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"colMenu\" md={12}>\r\n            <form className=\"formMenu\" onSubmit={this.onSubmit}>\r\n              <input className=\"button\" type=\"file\" name=\"file\" />\r\n\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n\r\n            {this.noMenu()}\r\n            <Card.Body classNam=\"cardsupp\">\r\n              <p>{this.state.menu.dailyMenu.label}</p>\r\n              <button\r\n                className=\"boutonSupprimer\"\r\n                type=\"submit\"\r\n                onClick={this.delete}\r\n              >\r\n                Supprimer le menu\r\n              </button>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component, Form, Label, Input } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\nimport \"./Personnel.css\";\r\nimport Icon from \"react-fa\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Personnel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] }, email: \"\" };\r\n  }\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-list\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ serveur: data });\r\n          console.log(this.state.serveur);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  renderMesServeurs = () => {\r\n    return this.state.serveur.tabServeur.map((element) => {\r\n      return (\r\n        <div className=\"serveurDiv\">\r\n          <p className=\"serveurP\">{element.serveurName}</p>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              const data = {\r\n                mail: element.serveurMail,\r\n              };\r\n\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"DELETE\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/waiter-delete\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    this.getWaiterList();\r\n                  },\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addAffiliation = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      nom: this.state.nom,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/affiliation\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  addReferent = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/management/referent\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getWaiterList();\r\n  }\r\n\r\n  crew = () => {\r\n    if (!this.state.serveur) {\r\n      return (\r\n        <p className=\"affiliation\">Vous n'avez pas de personnel affilié</p>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col className=\"crewStyle\">\r\n          <Carousel\r\n            slidesPerPage={5}\r\n            slidesPerScroll={1}\r\n            clickToChange\r\n            centered\r\n            infinite={true}\r\n            breakpoints={{\r\n              1000: {\r\n                // these props will be applied when screen width is less than 1000px\r\n                slidesPerPage: 0,\r\n                clickToChange: false,\r\n                centered: false,\r\n              },\r\n              500: {\r\n                slidesPerPage: 1,\r\n                slidesPerScroll: 1,\r\n                clickToChange: false,\r\n                centered: false,\r\n\r\n                animationSpeed: 2000,\r\n                infinite: false,\r\n              },\r\n            }}\r\n          >\r\n            {this.renderMesServeurs()}\r\n          </Carousel>\r\n        </Col>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"container personnel\">\r\n        <Row>\r\n          <Col>\r\n            <Link className=\"linkButton\" to=\"/equipe\">\r\n              <h1 className=\"title-container\">Gestion de mon équipe</h1>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colAffiliation\">\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addAffiliation}\r\n              className=\"button\"\r\n            />\r\n            <p className=\"infoAffi\">\r\n              \"Si votre serveur n'est pas encore sur Tipourboire. Demandez-lui\r\n              de créer son compte Tipourboire avant de lui envoyer votre mail\r\n              d'affiliation\"\r\n            </p>\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation d'un serveur referent (pourboire commun)\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addReferent}\r\n              className=\"button\"\r\n            />\r\n            <p className=\"infoAffi\">\r\n              \"Si votre serveur référent n'est pas encore sur Tipourboire.\r\n              Demandez-lui de créer son compte Tipourboire avant de lui envoyer\r\n              votre mail d'affiliation\"\r\n            </p>\r\n            <br />\r\n            {this.state.message}\r\n          </Col>\r\n        </Row>\r\n        <h1 className=\"titleWaiter\">Mon équipe </h1>\r\n        {this.crew()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Personnel;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./HomePage.css\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { restaurantName: \"\" };\r\n  }\r\n  getRestaurantName = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          localStorage.setItem(\r\n            \"propsRestaurant\",\r\n            JSON.stringify(responseObject.restaurantName)\r\n          );\r\n          this.setState({ restaurantName: responseObject.restaurantName });\r\n          this.setState({ abonne: responseObject.abonne });\r\n          console.log(\r\n            \"consolelog\",\r\n            JSON.parse(localStorage.getItem(\"propsRestaurant\"))\r\n          );\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Accès à mon espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"buttonPremium\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Souscrire à l'abonnement premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRestaurantName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Personnel className=\"personnel\" />\r\n            <div className=\"titleQR\">{this.renderButtonSub()}</div>\r\n            <h1 className=\"titleQR\">Mes QR Codes</h1>\r\n\r\n            <Row>\r\n              <Col>\r\n                <p className=\"titleQR\">QR CODE Ticket </p>\r\n                <p className=\"qrSub\">\r\n                  à insérer sur vos tickets d'addition depuis votre logiciel de\r\n                  caisse\r\n                </p>\r\n                <QrCodeTicket\r\n                  className=\"qrCodeTicket\"\r\n                  restaurantName={this.state.restaurantName}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <p className=\"titleQR\"> QR CODE Menu </p>\r\n                <p className=\"qrSub\">\r\n                  à imprimer et coller sur les tables de votre restaurant\r\n                </p>\r\n                <QrCode\r\n                  className=\"qrCode\"\r\n                  restaurantName={this.state.restaurantName}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <DailyMenu className=\"menuhome\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./OtherMenu.css\";\r\nclass OtherMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: { otherMenu: [] },\r\n    };\r\n  }\r\n  getOtherMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOtherMenu();\r\n  }\r\n\r\n  noMenu = () => {\r\n    if (this.state.menu.otherMenu && this.state.menu.otherMenu.length) {\r\n      return (\r\n        <div>\r\n          <Carousel>{this.display()}</Carousel>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Vous n'avez pas de menu pour l'instant</p>;\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/add\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteMenu = (e, index) => {\r\n    e.preventDefault();\r\n    const data = { picture: this.state.menu.otherMenu[index].picture };\r\n\r\n    const headers = new Headers({\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/menu/delete\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  display = () => {\r\n    let contentDisplay = [];\r\n    this.state.menu.otherMenu.map((element, index) => {\r\n      contentDisplay.push(\r\n        <Carousel.Item>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"https://back-end.osc-fr1.scalingo.io/\" + element.picture}\r\n            />\r\n            <Card.Body>\r\n              <Button\r\n                onClick={(e) => this.deleteMenu(e, index)}\r\n                className=\"bouton\"\r\n              >\r\n                Supprimer le menu\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return contentDisplay;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"menuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"menu\">\r\n            <h2>Mes Menus</h2>\r\n          </Col>\r\n          <Col className=\"menuOther\" md={12}>\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n              />\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n            {this.noMenu()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport OtherMenu from \"../../assets/components/OtherMenu/OtherMenu\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menus\">\r\n        <Row>\r\n          <Col>\r\n            <DailyMenu />\r\n          </Col>\r\n          <Col md={12} sm={12}>\r\n            <OtherMenu />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/restaurateur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./navBar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavLink,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/homepage\">Accueil</Dropdown.Item>\r\n                <Dropdown.Item href=\"/Profil\">Profil</Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/homepage\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/inscription\">Inscription</Dropdown.Item>\r\n                <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n  }\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n}\r\nexport default Barremenu;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Deconnexion.css\";\r\n\r\nclass Deconnexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"deconnect\">\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ redirect: true });\r\n          }}\r\n          className=\"signOut\"\r\n        >\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n        </button>\r\n        {this.redirect()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deconnexion;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"/CGV_TIPTOTHANK.pdf\"\r\n                target=\"_blanck\"\r\n                className=\"textFooter\"\r\n              >\r\n                Conditions Générales\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/*<Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"./dataClient.css\";\r\n\r\nclass DataClient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : [] ,\r\n    };\r\n  }\r\n  getDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n  \r\n    \r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.map((element, index) => {\r\n      return (\r\n       \r\n          \r\n        \r\n        \r\n          <tr>\r\n            <td type=\"text\" id=\"firstname\" name=\"firstname\">\r\n              {\" \"}\r\n              {element.firstname}\r\n            </td>\r\n            <td type=\"text\" id=\"lastname\" name=\"lastname\">\r\n              {\" \"}\r\n              {element.lastname}\r\n            </td>\r\n            <td type=\"text\" id=\"email\" name=\"email\">\r\n              {\" \"}\r\n              {element.email}\r\n            </td>\r\n            <td type=\"text\" id=\"phone\" name=\"phone\">\r\n              {\" \"}\r\n              {element.phone}\r\n            </td>\r\n            <td type=\"text\" id=\"age\" name=\"age\">\r\n              {\" \"}\r\n              {element.age}\r\n            </td>\r\n          </tr>\r\n        \r\n     \r\n     \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='bloc-data'>  \r\n        <h3>Base de données client</h3>\r\n        <div class=\"table-responsive\">\r\n        <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className=\"Telecharger\"\r\n                    table=\"table-to-xls\"\r\n                    filename=\"tablexls\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Télécharger\"/>\r\n        <Table id=\"table-to-xls\" striped bordered hover>\r\n        <th className='colorTitre'>Nom</th>\r\n         <th className='colorTitre'>Prenom</th>\r\n        <th className='colorTitre'>Mail</th>\r\n        <th className='colorTitre'>Téléphone</th>\r\n        <th className='colorTitre'>Age</th>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n        </Table>\r\n        </div>\r\n       \r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default DataClient\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Abonnement from \"../Abonnement/Abonnement\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport ConnexionAbo from \"../ConnexionAbo/ConnexionAbo\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\n\r\nimport Navbar from \"../../assets/components/Navbar/Navbar\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport DataClient from \"../dataClient/dataClient\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Navbar setLogin={this.setLogin} login={this.state.login} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/homepage\"\r\n              render={(props) => (\r\n                <HomePage setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/profil\"\r\n              render={(props) => <Profil setLogin={this.setLogin} {...props} />}\r\n            />\r\n            <Route path=\"/dataClient\" component={DataClient} />\r\n            <Route path=\"/menus\" component={Menu} />\r\n            <Route path=\"/equipe\" component={Personnel} />\r\n            <Route path=\"/abonnement\" component={Abonnement} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}